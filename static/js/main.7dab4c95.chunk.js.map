{"version":3,"sources":["Components/Comic/Comic.js","Components/Btns/Btns.js","Components/Loading/Loading.js","Components/StarRaiting/StarRaiting.js","App.js","reportWebVitals.js","index.js"],"names":["Comic","props","comic","className","title","alt","src","img","Btns","fetchComic","fetchLastestComic","fetchRandomComic","lastestComic","Button","variant","color","disabled","num","onClick","Loading","StarRaiting","useState","raiting","setRaiting","Array","map","star","index","raitingValue","type","name","value","size","App","setComic","loading","setLoading","setLatestComic","number","axios","get","then","res","data","catch","error","console","log","finally","useEffect","fetchFirstComic","Math","floor","random","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7dab4c95.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Comic.css\";\r\n\r\nfunction Comic(props) {\r\n  const { comic } = props;\r\n\r\n  return (\r\n    <div className=\"comic\">\r\n      <h2 className=\"comic__title\">{comic.title}</h2>\r\n      <img className=\"comic__img\" alt=\"comicImg\" src={comic.img} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Comic;\r\n","import React from \"react\";\r\nimport \"./Btns.css\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\r\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\r\nimport ArrowForwardIosIcon from \"@material-ui/icons/ArrowForwardIos\";\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\n\r\nfunction Btns(props) {\r\n  const {\r\n    fetchComic,\r\n    fetchLastestComic,\r\n    fetchRandomComic,\r\n    comic,\r\n    lastestComic,\r\n  } = props;\r\n\r\n  return (\r\n    <div className=\"btns\">\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        disabled={comic.num === 1}\r\n        onClick={() => fetchComic(1)}\r\n      >\r\n        <FirstPageIcon />\r\n      </Button>\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        disabled={comic.num <= 1}\r\n        onClick={() => {\r\n          if (comic.num > 1) {\r\n            fetchComic(comic.num - 1);\r\n          }\r\n        }}\r\n      >\r\n        <ArrowBackIosIcon /> Previous\r\n      </Button>\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        onClick={() => fetchRandomComic()}\r\n      >\r\n        Random\r\n      </Button>\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        onClick={() => fetchComic(comic.num + 1)}\r\n        disabled={comic.num === lastestComic}\r\n      >\r\n        Next\r\n        <ArrowForwardIosIcon />\r\n      </Button>\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        disabled={comic.num === lastestComic}\r\n        onClick={() => fetchLastestComic()}\r\n      >\r\n        <LastPageIcon />\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Btns;\r\n","import React from \"react\";\r\nimport { CommonLoading } from \"react-loadingg\";\r\n\r\nfunction Loading() {\r\n  return (\r\n    <div>\r\n      <CommonLoading />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Loading;\r\n","import React, { useState } from \"react\";\r\nimport { FaStar } from \"react-icons/fa\";\r\nimport \"./StarRaiting.css\";\r\n\r\nfunction StarRaiting() {\r\n  const [raiting, setRaiting] = useState(null);\r\n\r\n  return (\r\n    <div className=\"starRaiting\">\r\n      {[...Array(5)].map((star, index) => {\r\n        const raitingValue = index + 1;\r\n        return (\r\n          <label>\r\n            <input\r\n              type=\"radio\"\r\n              name=\"rating\"\r\n              value={raitingValue}\r\n              onClick={() => setRaiting(raitingValue)}\r\n            />\r\n            <FaStar\r\n              className=\"starRaiting__star\"\r\n              size={50}\r\n              color={raitingValue <= raiting ? \"#fcc107\" : \"#7B7B7B\"}\r\n            />\r\n          </label>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StarRaiting;\r\n","import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport axios from \"axios\";\nimport Comic from \"./Components/Comic/Comic\";\nimport Btns from \"./Components/Btns/Btns\";\nimport Loading from \"./Components/Loading/Loading\";\nimport StarRaiting from \"./Components/StarRaiting/StarRaiting\";\n\nfunction App() {\n  const [comic, setComic] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [lastestComic, setLatestComic] = useState(null);\n\n  const fetchComic = (number) => {\n    setLoading(true);\n    axios\n      .get(\n        `https://cors-anywhere.herokuapp.com/https://xkcd.com/${number}/info.0.json`\n      )\n      .then((res) => setComic(res.data))\n      .catch((error) => console.log(\"error: \", error))\n      .finally(() => setLoading(false));\n  };\n\n  const fetchFirstComic = (number = 1) => {\n    setLoading(true);\n    axios\n      .get(\n        `https://cors-anywhere.herokuapp.com/https://xkcd.com/${number}/info.0.json`\n      )\n      .then((res) => setComic(res.data))\n      .catch((error) => console.log(\"error: \", error))\n      .finally(() => setLoading(false));\n  };\n\n  const fetchRandomComic = () => {\n    let num = Math.floor(Math.random() * 601);\n    fetchComic(num);\n  };\n\n  const fetchLastestComic = () => {\n    setLoading(true);\n    axios\n      .get(\"https://cors-anywhere.herokuapp.com/https://xkcd.com/info.0.json\")\n      .then((res) => {\n        setComic(res.data);\n        setLatestComic(res.data.num);\n      })\n      .catch((error) => {\n        console.log(error);\n      })\n      .finally(() => setLoading(false));\n  };\n\n  useEffect(() => {\n    fetchFirstComic();\n  }, []);\n\n  if (loading) {\n    return (\n      <div>\n        <Loading />{\" \"}\n      </div>\n    );\n  }\n  return (\n    <div className=\"app\">\n      <Comic comic={comic} />\n      <Btns\n        comic={comic}\n        fetchComic={fetchComic}\n        fetchLastestComic={fetchLastestComic}\n        fetchRandomComic={fetchRandomComic}\n        lastestComic={lastestComic}\n      />\n      <StarRaiting />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}